# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: self-hosted
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Build Dockerfile
      run: docker build -t memory-cards:latest .

  run:
    needs: build
    runs-on: self-hosted
    permissions:
      contents: read

    steps:
      - name: Stop and remove existing memory-cards container
        run: |
          echo "Stopping and removing existing memory-cards container (if exists)..."
          docker stop memory-cards || echo "No running container to stop."
          docker rm memory-cards || echo "No container to remove."  

      - name: Start memory-cards container
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          echo "Starting memory-cards container..."
          docker run -d \
            --name memory-cards \
            -e BOT_TOKEN=${{ secrets.BOT_TOKEN }} \
            --network tg_bot_network \
            -p 8080:8080 \
            memory-cards:latest

      - name: Health Check
        run: |
          echo "Performing health check..."
          HEALTH_CHECK_URL="http://localhost:8080/actuator/health"

          for i in {1..15}; do
            RESPONSE=$(curl -v -s $HEALTH_CHECK_URL || echo "ERROR")

            if [[ "$RESPONSE" == *'"status":"UP"'* ]]; then
              echo "Application is healthy."
              exit 0
            fi

            echo "Attempt $i failed. Response: $RESPONSE"
            sleep 5
          done

          echo "Application health check failed after 4 attempts."
          docker logs memory-cards
          exit 1

#  dependency-submission:
#    runs-on: self-hosted
#    permissions:
#      contents: write
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 23
#      uses: actions/setup-java@v4
#      with:
#        java-version: '23'
#        distribution: 'temurin'
#
#    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#    - name: Generate and submit dependency graph
#      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
